{"version":3,"sources":["components/UnformInput/styles.ts","components/UnformInput/index.tsx","components/Unform/styles.ts","components/Frame/styles.ts","components/Frame/index.tsx","components/Unform/index.tsx","components/ReactHookInput/styles.ts","components/ReactHookInput/index.tsx","components/ReactForm/styles.ts","components/ReactForm/index.tsx","components/FormikInput/styles.ts","components/FormikInput/index.tsx","components/Formik/styles.ts","components/Formik/index.tsx","components/Counter/index.tsx","styles/globalStyles.ts","AppStyles.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Label","span","UnformInput","name","label","rest","useField","fieldName","error","defaultValue","registerField","inputRef","useRef","useEffect","ref","current","path","type","Form","UnformForm","TitleContainer","Frame","children","title","Unform","onSubmit","data","alert","JSON","stringify","register","form","ReactForm","useForm","handleSubmit","Input","Field","FormikForm","FormikComponent","initialValues","firstName","lastName","Counter","props","useState","count","setCount","useImperativeHandle","addCount","value","forwardRef","createGlobalStyle","App","UnformCountRef","ReactFormCountRef","formikCountRef","id","onRender","Formik","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e0f13fd.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  border-radius: 2px;\r\n  width: 80%;\r\n\r\n  > input {\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    color: #44475a;\r\n    border: 2px solid transparent;\r\n\r\n    &:focus{\r\n      border: 2px solid #bd93f9;\r\n    }\r\n  }\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Label = styled.span`\r\nfont-size: 12px;\r\nfont-weight: bold;\r\ntext-transform: uppercase;\r\nletter-spacing: -0.5px;\r\n\r\npadding-bottom: 2px;\r\n\r\ndisplay: flex;\r\nwidth: 80%;\r\n`\r\n","import React, {useEffect, useRef} from 'react';\r\nimport { useField } from '@unform/core'\r\n\r\nimport { Container, Label } from './styles';\r\n\r\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nconst UnformInput: React.FC<InputProps> = ({name, label, ...rest}) => {\r\n  const { fieldName, error, defaultValue, registerField } = useField(name);\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  useEffect(()=>{\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    })\r\n  },[fieldName, registerField])\r\n\r\n  return (\r\n    <>\r\n    {label && <Label>{label}</Label>}\r\n    <Container>\r\n      <input ref={inputRef} defaultValue={defaultValue} type=\"text\" {...rest}/>\r\n      {error && error}\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnformInput;","import styled from 'styled-components';\nimport { Form as UnformForm } from '@unform/web'\n\nexport const Form = styled(UnformForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 16px;\n  width: 100%;\n\n  >button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    height: 40px;\n    width: 80%;\n\n    background: #ff79c6;\n    border-radius: 2px;\n\n    font-weight: lighter;\n    letter-spacing: 6px;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 350px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: all ease 0.2s;\n\n  @media screen and (max-width: 1200px) {\n    width: 250px;\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  letter-spacing: 2px;\n  border-bottom: 2px solid #bd93f9;\n\n  > h2 {\n    font-weight: lighter;\n    padding-bottom: 6px;\n  }\n\n`;\n","import React from 'react';\n\nimport { Container, TitleContainer } from './styles';\n\ninterface IProps{\n  title: string;\n}\n\nconst Frame: React.FC<IProps> = ({children, title}) => {\n\n  return (\n    <Container>\n      <TitleContainer>\n        <h2>{title}</h2>\n      </TitleContainer>\n      {children}\n    </Container>\n  );\n}\n\nexport default Frame;\n","import React from 'react';\n\nimport Input from '../UnformInput'\nimport { Form } from './styles';\nimport Frame from '../Frame'\n\nconst Unform: React.FC = () => {\n\n  return (\n    <Frame title=\"Unform\">\n      <Form onSubmit={(data) => alert(JSON.stringify(data))}>\n        <Input name=\"firstName\" label=\"First Name\"/>\n        <Input name=\"lastName\" label=\"Last Name\"/>\n        <button type=\"submit\">SUBMIT</button>\n      </Form>\n    </Frame>\n  );\n}\n\nexport default Unform;\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  border-radius: 2px;\r\n  width: 80%;\r\n\r\n  > input {\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    color: #44475a;\r\n    border: 2px solid transparent;\r\n\r\n    &:focus{\r\n      border: 2px solid #bd93f9;\r\n    }\r\n  }\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Label = styled.span`\r\nfont-size: 12px;\r\nfont-weight: bold;\r\ntext-transform: uppercase;\r\nletter-spacing: -0.5px;\r\n\r\npadding-bottom: 2px;\r\n\r\ndisplay: flex;\r\nwidth: 80%;\r\n`\r\n","import React from 'react';\r\n\r\nimport { Container, Label } from './styles';\r\n\r\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\r\n  name: string;\r\n  register(): void;\r\n  label?: string;\r\n}\r\n\r\n\r\nconst UnformInput: React.FC<InputProps> = ({name, label, register, ...rest}) => {\r\n  return (\r\n    <>\r\n    {label && <Label>{label}</Label>}\r\n    <Container>\r\n      <input name={name} type=\"text\" ref={register} {...rest}/>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnformInput;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 16px;\n  width: 100%;\n\n  >button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    height: 40px;\n    width: 80%;\n\n    background: #ff79c6;\n    border-radius: 2px;\n\n    font-weight: lighter;\n    letter-spacing: 6px;\n  }\n`;\n","import React from 'react';\n\nimport { useForm } from 'react-hook-form';\nimport Input from '../ReactHookInput'\n\nimport Frame from '../Frame'\nimport { Form } from './styles';\n\nconst ReactForm: React.FC = () => {\n  const {handleSubmit, register } = useForm();\n\n  return (\n    <Frame title=\"React Hook Form\">\n      <Form onSubmit={handleSubmit((data) => alert(JSON.stringify(data)))}>\n        <Input name=\"firstName\" label=\"First Name\" register={register} />\n        <Input name=\"lastName\" label=\"Last Name\" register={register} />\n        <button type=\"submit\">SUBMIT</button>\n      </Form>\n    </Frame>\n  );\n}\n\nexport default ReactForm;\n","import styled from 'styled-components';\r\nimport { Field } from 'formik';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  border-radius: 2px;\r\n  width: 80%;\r\n\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  color: #44475a;\r\n  border: 2px solid transparent;\r\n  \r\n  &:focus{\r\n    border: 2px solid #bd93f9;\r\n  }\r\n`\r\n\r\nexport const Label = styled.span`\r\nfont-size: 12px;\r\nfont-weight: bold;\r\ntext-transform: uppercase;\r\nletter-spacing: -0.5px;\r\n\r\npadding-bottom: 2px;\r\n\r\ndisplay: flex;\r\nwidth: 80%;\r\n`\r\n","import React from 'react';\r\n\r\nimport { Container, Label, Input } from './styles';\r\n\r\ninterface InputProps{\r\n  name: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n}\r\n\r\nconst UnformInput: React.FC<InputProps> = ({name, label, ...rest}) => {\r\n  return (\r\n    <>\r\n    {label && <Label>{label}</Label>}\r\n    <Container>\r\n      <Input name={name} type=\"text\" {...rest} />\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnformInput;","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik'\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 16px;\n  width: 100%;\n\n  >button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    height: 40px;\n    width: 80%;\n\n    background: #ff79c6;\n    border-radius: 2px;\n\n    font-weight: lighter;\n    letter-spacing: 6px;\n  }\n`;\n","import React from 'react';\n\nimport { Formik } from 'formik'\nimport Input from '../FormikInput'\n\nimport Frame from '../Frame'\nimport { Form } from './styles';\n\ninterface IFormData {\n  firstName: string;\n  lastName: string;\n}\n\nconst FormikComponent: React.FC = () => {\n\n  return (\n    <Frame title=\"Formik\" >\n      <Formik\n        initialValues={{firstName: '', lastName: ''}}\n        onSubmit={(data: IFormData) => {\n          alert(JSON.stringify(data));\n        }}\n      >\n        <Form>\n          <Input name=\"firstName\" label=\"First Name\"/>\n          <Input name=\"lastName\" label=\"Last Name\"/>\n          <button type=\"submit\">SUBMIT</button>\n        </Form>\n      </Formik>\n    </Frame>\n    );\n  }\n\n  export default FormikComponent;\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\n\ninterface CounterRef{\n  addCount(): void;\n}\n\nconst Counter: React.ForwardRefRenderFunction<CounterRef> = (props,ref) => {\n  const [count, setCount] = useState<number>(1)\n\n  useImperativeHandle(ref, () => ({\n      addCount() {\n        setCount(value => value+1);\n      }\n    })\n  )\n\n  return (\n    <span>Form total renders: {count}</span>\n  );\n}\n\nexport default forwardRef(Counter);\n","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    border: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  #root, html, body{\r\n    height: 100%;\r\n  }\r\n\r\n  body, input, button, textarea{\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 16px;\r\n    color: #f8f8f2;\r\n  }\r\n\r\n  button{\r\n    cursor: pointer;\r\n  }\r\n`","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #282a36;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content:center;\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    margin-left: 50px;\n    > span{\n      padding: 10px 0;\n    }\n  }\n`;\n","import React, { Profiler, useRef } from 'react';\n\nimport Unform from './components/Unform'\nimport ReactForm from './components/ReactForm'\nimport Formik from './components/Formik'\n\nimport Counter from './components/Counter'\nimport GlobalStyles from './styles/globalStyles'\nimport { Container } from './AppStyles'\n\nconst App: React.FC = () => {\n  const UnformCountRef = useRef<any>(null)\n  const ReactFormCountRef = useRef<any>(null)\n  const formikCountRef = useRef<any>(null)\n  return (\n    <>\n      <GlobalStyles/>\n      <Container>\n        <div>\n          <Profiler id=\"Unform\" onRender={() => UnformCountRef.current?.addCount()}>\n            <Unform/>\n          </Profiler >\n          <Counter ref={UnformCountRef}/>\n        </div>\n\n        <div>\n          <Profiler id=\"ReactHookForm\" onRender={() => ReactFormCountRef.current?.addCount()}>\n            <ReactForm/>\n          </Profiler >\n          <Counter ref={ReactFormCountRef}/>\n        </div>\n\n        <div>\n          <Profiler id=\"Formik\" onRender={() => formikCountRef.current?.addCount()}>\n            <Formik/>\n          </Profiler >\n          <Counter ref={formikCountRef}/>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}